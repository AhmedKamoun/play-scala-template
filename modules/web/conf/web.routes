# WEB Routes
# This file defines WEB application routes (Higher priority routes first)
# ~~~~

# Home page
# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

#http://windrush.io/tech/2013/12/17/cors-and-play.html
#make this the first rule: OPTIONS preflight request:
OPTIONS        /*all                           @controllers.web.login.Login.options(all)

GET            /                               @controllers.web.login.Login.login()
POST           /login                          @controllers.web.login.Login.submitLogin()
POST           /registration                   @controllers.web.login.Login.Registration()
GET            /index                          @controllers.web.login.Login.index()
GET            /logout                         @controllers.web.login.Login.logout()

POST           /addMan                         @controllers.web.Application.submit()
POST           /fill-men                       @controllers.web.Application.fillWithMen()
GET            /artisteMen                     @controllers.web.Application.allArtistMen()
GET            /persons                        @controllers.web.Application.allPersons()
GET            /persons-cached                 @controllers.web.Application.personsFromCache()
GET            /elepsed-time/:startTime        @controllers.web.Application.compositeResponse(startTime:Long)

POST           /addLikes                       @controllers.web.LikeController.addLikesToPerson()
DELETE         /removeLikes                    @controllers.web.LikeController.removeLikesFromPerson()
GET            /getLikes                       @controllers.web.LikeController.getLikesToPerson()
GET            /getLikesBy                     @controllers.web.LikeController.getLikesBy(description :String)
GET            /throw-exception                @controllers.web.Application.exception(x: Int)
POST           /upload-picture                 @controllers.web.Application.uploadPicture()
GET            /generate-signature             @controllers.web.Application.generateSignature(folder: Option[String])
GET            /upload-client-side             @controllers.web.Application.upload_picture_client_side(folder: Option[String])
DELETE         /delete-file                    @controllers.web.Application.delete(public_id: String)
#map read test
GET            /search-from-map                @controllers.web.MapTestController.searchFromMap(key:String)

#akka test
GET            /update-actor                   @controllers.web.actors.ConnectionController.updateActor(id:String,msg:String)
GET            /socket-registration            @controllers.web.actors.ConnectionController.socket()




# Map static resources from the /public folder to the /assets URL path
GET            /assets/*file                   controllers.Assets.at(path="/public", file)
